import java.io.BufferedReader;import java.io.File;import java.io.FileReader;import java.util.ArrayList;import java.util.HashMap;import java.util.Iterator;import java.util.TreeSet;import java.util.Map.Entry;import utils.FileFinder;import utils.MyComparator;public class errorList {	public static void main(String[] args) throws Exception{		HashMap<String, Integer> errorlist = new HashMap<String,Integer>();		ArrayList<File> files = FileFinder.GetAllFiles("iccco/test", ".data", true);		for(File file: files){			@SuppressWarnings("resource")			BufferedReader br = new BufferedReader(new FileReader(file));			String line = null;			while ((line = br.readLine()) != null) {				String[] split = line.split(" ");				if (split.length < 2) continue;				@SuppressWarnings("unused")				String word = split[0];						String lemma = split[1];				@SuppressWarnings("unused")				String annotated = split[2];				@SuppressWarnings("unused")				String predicted = split[3];								if(errorlist.containsKey(lemma)){					int temp = errorlist.get(lemma);					errorlist.put(lemma, temp+1);				}				else{					errorlist.put(lemma, 1);				}				}		}				@SuppressWarnings("rawtypes")		MyComparator comparator = new MyComparator();		@SuppressWarnings("unchecked")		TreeSet<Entry<String, Integer>> ts = new TreeSet<Entry<String, Integer>>(comparator);		Iterator<Entry<String, Integer>> iter = errorlist.entrySet().iterator();		while (iter.hasNext()) {		    Entry<String, Integer> entry = iter.next();	    			ts.add(entry);		}				for(@SuppressWarnings("rawtypes") Entry entry : ts){			System.out.println("lemma: " + entry.getKey() + "	 count: " + entry.getValue());		}	}}